name: 🚀 Build and deploy to Azure Function App

on:
  push:
    tags:
      - 'v*'

jobs:
  setup:
    runs-on: "ubuntu-latest"

    outputs:
      TAG: ${{ steps.get_release.outputs.tag_name }}
      MATRIX: ${{ steps.changed-directories.outputs.all_changed_files }}

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed directories
        id: changed-directories
        uses: tj-actions/changed-files@v42
        with:
         json: true
         files: |
            {services/emails,services/subscriptions}/**
         dir_names: true
         dir_names_max_depth: 3
         escape_json: false

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔖 Get release tag name
        id: get_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          latest: true
# 

  build-and-deploy:
    runs-on: "ubuntu-latest"

    permissions:
      contents: read
      packages: write

    needs: common-steps

    env:
      # MATRIX: ${{ needs.common-steps.outputs.MATRIX }}
      TAG: ${{ needs.common-steps.outputs.TAG }}

    strategy:
      matrix:
        directory: ${{fromJson(needs.common-steps.outputs.MATRIX)}}

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Check and copy necessary files 
        run: |
          REQUIRED_FILES=(".funcignore" "host.json" "Dockerfile",".dockerignore")
          for file in "${REQUIRED_FILES[@]}"; do
            echo "${file} found in ${COMMON_FILES_PATH}, copying from there"
            cp "./services/${file}" "${{ matrix.directory }}/"
          done

      - name: 📄 copy or merge requirements.txt file
        run: |
          if [ -f "./${{ matrix.directory }}/requirements.txt"]; then
            cat ${{ matrix.directory }}/requirements.txt ./services/requirements.txt | sort -u >> merge.txt
            mv merge.txt ${{ matrix.directory }}/requirements.txt
          else
            cp "./services/requirements.txt" "${{ matrix.directory }}/"
          fi

      - name: 🔑 Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔑 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🔄 Extract Last Directory Level
        id: get-last-level
        run: |
          LAST_LEVEL=$(echo ${{ matrix.directory }} | xargs -n 1 basename)
          echo "LAST_LEVEL=$LAST_LEVEL" >> "$GITHUB_ENV"

      - name: 🐳 Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ env.LAST_LEVEL }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ env.TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.TAG }}
            type=semver,pattern={{major}},value=${{ env.TAG }}

      - name: 🏗️ Build and push container image to registry
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.directory }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          file: ./${{ matrix.directory }}/Dockerfile

      - name: print
        run: |
         echo ${{ steps.build-and-push.outputs.json }}
      # - name: 🚀 Deploy to Azure Functions
      #   id: deploy-to-functions
      #   uses: Azure/functions-container-action@v1
      #   with:
      #     app-name: ${{ steps.get-last-level.outputs.last_level }}
      #     image: ${{ steps.docker_meta.outputs.tags }}